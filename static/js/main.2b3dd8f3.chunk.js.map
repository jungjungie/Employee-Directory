{"version":3,"sources":["components/Header/Header.js","components/SearchBar/SearchBar.js","components/EmployeeTable/EmployeeTable.js","components/TableRows/TableRows.js","utils/API.js","App.js","index.js"],"names":["Header","className","SearchBar","props","id","aria-hidden","type","placeholder","onChange","filterSearch","EmployeeTable","onClick","sortByName","sortByPhone","sortByEmail","sortByDOB","children","TableRows","src","image","alt","name","phone","email","DOB","axios","get","App","useState","original","filtered","employees","setEmployees","sortName","setName","sortPhone","setPhone","sortEmail","setEmail","sortDOB","setDOB","moment","require","useEffect","generateEmployees","a","API","data","employeeFields","results","map","employee","i","key","first","last","dob","date","format","picture","thumbnail","event","filter","item","toLowerCase","includes","target","value","sortedNames","sort","b","nameA","nameB","comparison","reverse","sortedPhone","phoneA","phoneB","sortedEmail","emailA","emailB","sortedDOB","dobA","dobB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b3dd8f3.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n    return (\n        <header>\n            <h1 className=\"center\">EMPLOYEE DIRECTORY</h1>\n            <div className=\"instructions\">\n                <p className=\"center\">Welcome to the employee directory!</p> \n                <p className=\"center\">Search by name or phone number, or filter by column.</p>\n            </div>\n        </header>\n    )\n}","import React from \"react\";\n\nexport default function SearchBar(props) {\n    return (\n        <div id=\"searchContainer\" className=\"center\">\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n            <div id=\"searchInput\">\n                <input className=\"center\" type=\"text\" placeholder=\"Search by name or phone\" onChange={props.filterSearch} />\n            </div>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default function EmployeeTable(props) {\n    return (\n        <main className=\"row\">\n            <div className=\"col s1\"></div>\n            <table className=\"striped col s12 m10\">\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th onClick={props.sortByName}>Name <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i></th>\n                        <th onClick={props.sortByPhone}>Phone <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i></th>\n                        <th onClick={props.sortByEmail}>Email <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i></th>\n                        <th onClick={props.sortByDOB}>DOB <i className=\"fa fa-caret-down\" aria-hidden=\"true\"></i></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.children}\n                </tbody>\n            </table>\n            <div className=\"col s1\"></div>\n        </main>\n    )\n}","import React from \"react\";\n\nexport default function TableRows(props) {\n    return (\n        <tr>\n            <td>\n                <img src={props.image} alt={props.name} />\n            </td>\n            <td>{props.name}</td>\n            <td>{props.phone}</td>\n            <td>{props.email}</td>\n            <td>{props.DOB}</td>\n        </tr>\n    )\n}","import axios from \"axios\";\n\nconst BASEURL = \"https://randomuser.me/api/?results=50\";\n\nexport default {\n    generate: function () {\n        return axios.get(BASEURL);\n    }\n};\n","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport EmployeeTable from './components/EmployeeTable/EmployeeTable';\nimport TableRows from \"./components/TableRows/TableRows\";\nimport API from \"./utils/API\";\nimport './index.css';\n\nfunction App() {\n\n\t// Setting up states with Hooks\n\tconst [employees, setEmployees] = useState({ original: [], filtered: [] });\n\tconst [sortName, setName] = useState(\"\");\n\tconst [sortPhone, setPhone] = useState(\"\");\n\tconst [sortEmail, setEmail] = useState(\"\");\n\tconst [sortDOB, setDOB] = useState(\"\");\n\n\t// Dependencies\n\tlet moment = require(\"moment\");\n\n\t// Generates employees upon first page load\n\tuseEffect(() => {\n\t\tgenerateEmployees();\n\t}, []);\n\n\t// Generates employees from API call and reassigns data to a new object employeeFields\n\tconst generateEmployees = async () => {\n\t\tconst { data } = await API.generate()\n\n\t\tconst employeeFields = data.results.map((employee, i) => {\n\t\t\treturn {\n\t\t\t\tkey: i,\n\t\t\t\tname: `${employee.name.first} ${employee.name.last}`,\n\t\t\t\tphone: employee.phone,\n\t\t\t\temail: employee.email,\n\t\t\t\tDOB: moment(employee.dob.date).format('MM / DD'),\n\t\t\t\timage: employee.picture.thumbnail\n\t\t\t}\n\t\t})\n\t\tsetEmployees({ original: employeeFields, filtered: employeeFields })\n\t};\n\n\t// Filters the directory by the employee name or phone number entered into searchbar \n\tconst filterSearch = event => {\n\n\t\tlet filtered = employees.original.filter(item => item.name.toLowerCase().includes(event.target.value) || item.phone.includes(event.target.value));\n\n\t\tsetEmployees({ ...employees, filtered });\n\t}\n\n\t// Sorts employees by name when the name column is clicked\n\tconst sortByName = () => {\n\t\tlet sortedNames = employees.filtered.sort((a, b) => {\n\t\t\tconst nameA = a.name;\n\t\t\tconst nameB = b.name;\n\n\t\t\tlet comparison = 0;\n\t\t\tif (nameA > nameB) {\n\t\t\t\tcomparison = 1;\n\t\t\t} else if (nameA < nameB) {\n\t\t\t\tcomparison = -1;\n\t\t\t}\n\t\t\treturn comparison;\n\t\t})\n\n\t\t// Switches between sorting names by ascending and descending order\n\t\tif (sortName === \"DESC\") {\n\t\t\tsortedNames.reverse();\n\t\t\tsetName(\"ASC\");\n\t\t} else {\n\t\t\tsetName(\"DESC\");\n\t\t}\n\n\t\tsetEmployees({ ...employees, sortedNames });\n\t}\n\t\n\t// Sorts employees by phone # when the phone column is clicked\n\tconst sortByPhone = () => {\n\t\tlet sortedPhone = employees.filtered.sort((a, b) => {\n\t\t\tconst phoneA = a.phone;\n\t\t\tconst phoneB = b.phone;\n\n\t\t\tlet comparison = 0;\n\t\t\tif (phoneA > phoneB) {\n\t\t\t\tcomparison = 1;\n\t\t\t} else if (phoneA < phoneB) {\n\t\t\t\tcomparison = -1;\n\t\t\t}\n\t\t\treturn comparison;\n\t\t})\n\n\t\t// Switches between sorting names by ascending and descending order\n\t\tif (sortPhone === \"DESC\") {\n\t\t\tsortedPhone.reverse();\n\t\t\tsetPhone(\"ASC\");\n\t\t} else {\n\t\t\tsetPhone(\"DESC\");\n\t\t}\n\n\t\tsetEmployees({ ...employees, sortedPhone });\n\t}\n\n\tconst sortByEmail = () => {\n\t\tlet sortedEmail = employees.filtered.sort((a, b) => {\n\t\t\tconst emailA = a.email;\n\t\t\tconst emailB = b.email;\n\n\t\t\tlet comparison = 0;\n\t\t\tif (emailA > emailB) {\n\t\t\t\tcomparison = 1;\n\t\t\t} else if (emailA < emailB) {\n\t\t\t\tcomparison = -1;\n\t\t\t}\n\t\t\treturn comparison;\n\t\t})\n\n\t\t// Switches between sorting phone #s by ascending and descending order\n\t\tif (sortEmail === \"DESC\") {\n\t\t\tsortedEmail.reverse();\n\t\t\tsetEmail(\"ASC\");\n\t\t} else {\n\t\t\tsetEmail(\"DESC\");\n\t\t}\n\n\t\tsetEmployees({ ...employees, sortedEmail });\n\t}\n\n\t// Sorts employees by DOB when the DOB column is clicked\n\tconst sortByDOB = () => {\n\t\tlet sortedDOB = employees.filtered.sort((a, b) => {\n\t\t\tconst dobA = a.DOB;\n\t\t\tconst dobB = b.DOB;\n\n\t\t\tlet comparison = 0;\n\t\t\tif (dobA > dobB) {\n\t\t\t\tcomparison = 1;\n\t\t\t} else if (dobA < dobB) {\n\t\t\t\tcomparison = -1;\n\t\t\t}\n\t\t\treturn comparison;\n\t\t})\n\n\t\t// Switches between sorting DOB by ascending and descending order\n\t\tif (sortDOB === \"DESC\") {\n\t\t\tsortedDOB.reverse();\n\t\t\tsetDOB(\"ASC\");\n\t\t} else {\n\t\t\tsetDOB(\"DESC\");\n\t\t}\n\n\t\tsetEmployees({ ...employees, sortedDOB });\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<SearchBar filterSearch={filterSearch} />\n\t\t\t<EmployeeTable sortByName={sortByName} sortByPhone={sortByPhone} sortByDOB={sortByEmail} sortByEmail={sortByDOB}>\n\t\t\t\t{employees.filtered.map(employee =>\n\t\t\t\t\t<TableRows\n\t\t\t\t\t\tkey={employee.key}\n\t\t\t\t\t\timage={employee.image}\n\t\t\t\t\t\tname={employee.name}\n\t\t\t\t\t\tphone={employee.phone}\n\t\t\t\t\t\temail={employee.email}\n\t\t\t\t\t\tDOB={employee.DOB}\n\t\t\t\t\t/>)}\n\t\t\t</EmployeeTable>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}